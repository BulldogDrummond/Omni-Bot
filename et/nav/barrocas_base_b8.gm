//==========================================================================================
//
//  barrocas_base_b8.gm
//
//  Who When    What
//------------------------------------------------------------------------------------------
//  maker 01 January 2013 Initial Script
//
//==========================================================================================
//
// TeamAvailability  4 == allies
// TeamAvailability  6 == axis
// TeamAvailability 30 == all
//

global Map =
{
	Debug = 0, // please set to zero before distributing your script
	ShowMovers = false,

	Assault_Ramp_Dyno = 0,
	Assault_Ramp_Intact = 0,

	East_Axis_Gate_Dyno = 0,
	East_Axis_Gate_Intact = 1,

	West_Axis_Gate_Dyno = 0,
	West_Axis_Gate_Intact = 1,

	Command_Post_Dyno = 0,
	Command_Post_Intact = 0,

	Wall_Dyno = 0,
	Wall_Intact = 0,

	Assault_Ramp_Built = function( trigger )
	{
		if ( TestMap )
			{ return; }

		SetAvailableMapGoals( TEAM.AXIS, true, "PLANT_Assault_Ramp" );

		Util.MapDebugPrint( "Assault_Ramp_Built" );
	},

	Axis_Command_Post_Built = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Util.MapDebugPrint( "Axis_Command_Post_Built" );
	},

	Allied_Command_Post_Built = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Util.MapDebugPrint( "Allied_Command_Post_Built" );
	},

	Truck_Built = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Util.MapDebugPrint( "Truck_Built" );
	},

	Assault_Ramp_Planted = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.Assault_Ramp_Dyno += 1;
		Util.MapDebugPrint( "Assault_Ramp_Planted" );
	},

	Command_Post_Planted = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.Command_Post_Dyno += 1;
		Util.MapDebugPrint( "Command_Post_Planted" );
	},

	East_Axis_Gate_Planted = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.East_Axis_Gate_Dyno += 1;
		Util.MapDebugPrint( "East_Axis_Gate_Planted" );
	},

	Wall_Planted = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.Wall_Dyno += 1;
		Util.MapDebugPrint( "Wall_Planted" );
	},

	West_Axis_Gate_Planted = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.West_Axis_Gate_Dyno += 1;
		Util.MapDebugPrint( "West_Axis_Gate_Planted" );
	},

	Assault_Ramp_Defused = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.Assault_Ramp_Dyno -= 1;
		Util.MapDebugPrint( "Assault_Ramp_Defused" );
	},

	Command_Post_Defused = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.Command_Post_Dyno -= 1;
		Util.MapDebugPrint( "Command_Post_Defused" );
	},

	East_Axis_Gate_Defused = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.East_Axis_Gate_Dyno -= 1;
		Util.MapDebugPrint( "East_Axis_Gate_Defused" );
	},

	Wall_Defused = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.Wall_Dyno -= 1;
		Util.MapDebugPrint( "Wall_Defused" );
	},

	West_Axis_Gate_Defused = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.West_Axis_Gate_Dyno -= 1;
		Util.MapDebugPrint( "West_Axis_Gate_Defused" );
	},

	Assault_Ramp_Destroyed = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.Assault_Ramp_Dyno = 0;
		Map.Assault_Ramp_Intact = 0;

		SetAvailableMapGoals( TEAM.AXIS, false, "PLANT_Assault_Ramp" );

		Util.MapDebugPrint( "Assault_Ramp_Destroyed" );
	},

	Axis_Command_Post_Destroyed = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.Command_Post_Dyno = 0;

		Util.MapDebugPrint( "Axis Command_Post_Destroyed" );
	},

	Allied_Command_Post_Destroyed = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.Command_Post_Dyno = 0;

		Util.MapDebugPrint( "Allied Command_Post_Destroyed" );
	},

	East_Axis_Gate_Destroyed = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.East_Axis_Gate_Dyno = 0;
		Map.East_Axis_Gate_Intact = 0;

		if ( Map.West_Axis_Gate_Intact )
		{
			SetAvailableMapGoals( TEAM.ALLIES, false, "BUILD_Assault_Ramp" );
		}
		else
		{
			SetAvailableMapGoals( TEAM.ALLIES, true, "BUILD_Assault_Ramp" );
			SetAvailableMapGoals( TEAM.ALLIES, true, "PLANT_Wall" );
		}

		Util.MapDebugPrint( "East_Axis_Gate_Destroyed" );
	},

	Wall_Destroyed = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.Wall_Dyno = 0;

		SetAvailableMapGoals( TEAM.ALLIES, true, "FLAG_axis_gold" );
		SetAvailableMapGoals( TEAM.ALLIES, true, "CAPPOINT_9" );

		Util.MapDebugPrint( "Wall_Destroyed" );
	},

	West_Axis_Gate_Destroyed = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.West_Axis_Gate_Dyno = 0;
		Map.West_Axis_Gate_Intact = 0;

		if ( Map.East_Axis_Gate_Intact )
		{
			SetAvailableMapGoals( TEAM.ALLIES, false, "BUILD_Assault_Ramp" );
		}
		else //both walls down, ignore CP
		{
			SetAvailableMapGoals( TEAM.ALLIES, true, "BUILD_Assault_Ramp" );
			SetAvailableMapGoals( TEAM.ALLIES, true, "PLANT_Wall" );
			SetAvailableMapGoals( TEAM.ALLIES, false, "BUILD_Command_Post" );
		}

		Util.MapDebugPrint( "West_Axis_Gate_Destroyed" );
	},

	axis_gold_Taken = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Util.MapDebugPrint( "axis_gold_Taken" );
	},

	axis_gold_Returned = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Util.MapDebugPrint( "axis_gold_Returned" );
	},

	axis_gold_Secured = function( trigger )
	{
		if ( TestMap )
			{ return; }

		SetAvailableMapGoals( TEAM.ALLIES, true, "ESCORT_truck" );

		Util.MapDebugPrint( "axis_gold_Secured" );
	},

};

global OnMapLoad = function()
{
	if ( TestMapOn )
		{ Util.AutoTestMap(); }

	// Adjust goals
	Util.SetGoalOffset( -45, -15, -20, "PLANT_Wall");
	Util.SetGoalOffset( 0, -40, -80, "PLANT_West_Axis_Gate");

	// Register callback functions
	OnTrigger( "The Truck has been repaired!", Map.Truck_Built );                                       //  wm_announce "The Truck has been repaired!" wm_announce "The Truck has been damaged!"

	OnTrigger( "Assault_Ramp_Built", Map.Assault_Ramp_Built );
	OnTrigger( "Planted at the Assault Ramp.", Map.Assault_Ramp_Planted );
	OnTrigger( "Defused at the Assault Ramp.", Map.Assault_Ramp_Defused );
	OnTrigger( "The assault ramp has been destroyed!", Map.Assault_Ramp_Destroyed );

	OnTrigger( "Planted at the East Gate.", Map.East_Axis_Gate_Planted );                          //
	OnTrigger( "Defused at the East Gate.", Map.East_Axis_Gate_Defused );                          //
	OnTrigger( "Allies have destroyed the East Gate!", Map.East_Axis_Gate_Destroyed );                  //  wm_announce "Allies have destroyed the East Gate!"

	OnTrigger( "Planted at the West Axis Gate.", Map.West_Axis_Gate_Planted );                          //
	OnTrigger( "Defused at the West Axis Gate.", Map.West_Axis_Gate_Defused );                          //
	OnTrigger( "Allies have destroyed the West Gate!", Map.West_Axis_Gate_Destroyed );

	OnTrigger( "Planted at the Wall.", Map.Wall_Planted );
	OnTrigger( "Defused at the Wall.", Map.Wall_Defused );
	OnTrigger( "Allies have destroyed the Wall of the Gold storage!", Map.Wall_Destroyed );             //  wm_announce "Allies have destroyed the Wall of the Gold storage!"

	OnTrigger( "Axis Command Post constructed. Charge speed increased!", Map.Axis_Command_Post_Built );                                              //  wm_announce "Allied Command Post constructed. Charge speed increased!" wm_announce  "Axis Command Post constructed. Charge speed increased!"
	OnTrigger( "Allied Command Post constructed. Charge speed increased!", Map.Allied_Command_Post_Built );                                              //  wm_announce "Allied Command Post constructed. Charge speed increased!"
	OnTrigger( "Planted at the Command Post.", Map.Command_Post_Planted );                            //
	OnTrigger( "Defused at the Command Post.", Map.Command_Post_Defused );                            //
	OnTrigger( "Axis team has destroyed the Allied Command Post!", Map.Allied_Command_Post_Destroyed );

	OnTrigger( "The Allies have stolen the Axis gold", Map.axis_gold_Taken );                           //  wm_announce "The Allies have stolen the Axis gold" wm_announce "Allied team is escaping with the Gold Crates!"
	OnTrigger( "The Axis have returned the gold", Map.axis_gold_Returned );                             //  wm_announce "The Axis have returned the gold"
	OnTrigger( "The Allies have secured the Axis gold", Map.axis_gold_Secured );                        //  wm_announce "The Allies have secured the Axis gold" wm_announce "Allied team escaped with the Gold Crates!"

	// INIT ALL MAIN GOALS
	Util.DisableGoal( ".*", true ); // all but routes
	Util.DisableGoal( "AMMOCAB.*" );
	Util.DisableGoal( "HEALTH.*" );

	// ALLIED GOALS
	SetAvailableMapGoals( TEAM.ALLIES, true, "ATTACK_.*" );
	SetAvailableMapGoals( TEAM.ALLIES, true, "PLANT_West_Axis_Gate" );
	SetAvailableMapGoals( TEAM.ALLIES, true, "PLANT_East_Axis_Gate" );
	SetAvailableMapGoals( TEAM.ALLIES, false, "BUILD_Assault_Ramp" );
	SetAvailableMapGoals( TEAM.ALLIES, true, "SNIPE_allies_.*" );

	// AXIS GOALS
	SetAvailableMapGoals( TEAM.AXIS, true, "CALLARTILLERY_.*" );
	SetAvailableMapGoals( TEAM.AXIS, true, "ARTILLERY_S_.*" );
	SetAvailableMapGoals( TEAM.AXIS, true, "ATTACK_.*" );
	SetAvailableMapGoals( TEAM.AXIS, true, "DEFEND_.*" );
	SetAvailableMapGoals( TEAM.AXIS, true, "MOUNTMG42_.*" );
	SetAvailableMapGoals( TEAM.AXIS, false, "PLANT_Assault_Ramp" );
	SetAvailableMapGoals( TEAM.AXIS, true, "SNIPE_axis_.*" );

	// Camp times
	SetMapGoalProperties( "MOUNTMG42_.*", {MinCampTime=15, MaxCampTime=45} );
	SetMapGoalProperties( "MOBILEMG42_.*", {MinCampTime=10, MaxCampTime=60} );

	// Max users per goal
	Util.SetMaxUsers( 3, "ATTACK_.*" );
	Util.SetMaxUsers( 2, "DEFEND_.*" );
	Util.SetMaxUsers( 1, "GRENADE_.*" );
	Util.SetMaxUsers( 1, "SNIPE_.*" );
	Util.SetMaxUsers( 2, "MOUNTMG42_.*" );
	Util.SetMaxUsers( 1, "MOBILEMG42_.*" );
	Util.SetMaxUsers( 1, "MOBILEMORTAR_.*" );
	Util.SetMaxUsers( 1, "AIRSTRIKE_.*" );
	Util.SetMaxUsers( 1, "CALLARTILLERY_.*" );

	// Priorities
	// working?? SetGoalPriority( "*.*", 0.0 );

	ETUtil.LimitToClass( "DEFEND_axis_.*", TEAM.AXIS, CLASS.COVERTOPS );
	Util.SetMaxUsers( 1, "DEFEND_axis_.*" );
	Util.SetMaxUsersInProgress( 1, "DEFEND_axis_.*");

	SetGoalPriority( "ATTACK_.*", 0.1, 0, 0 );
	SetGoalPriority( "MOUNTMG42_.*", 0, 0, 0 );

	SetGoalPriority( "SNIPE_allies_.*", 0.5, TEAM.ALLIES, CLASS.COVERTOPS );
	SetGoalPriority( "SNIPE_axis_.*", 0.5, TEAM.AXIS, CLASS.COVERTOPS );

	SetGoalPriority( "PLANT_East_Axis_Gate", 0.50, TEAM.ALLIES, CLASS.ENGINEER );
	SetGoalPriority( "PLANT_West_Axis_Gate", 0.45, TEAM.ALLIES, CLASS.ENGINEER );
	SetGoalPriority( "BUILD_Assault_Ramp", 0.20, TEAM.ALLIES, CLASS.ENGINEER );
	SetGoalPriority( "PLANT_Wall", 0.70, TEAM.ALLIES, CLASS.ENGINEER );
	SetGoalPriority( "FLAG_axis_gold", 0.50, 0, 0 );
	SetGoalPriority( "CAPPOINT_9", 0.75, 0, 0 );
	SetGoalPriority( "MOVER_truck", 0.75, 0, 0 );
	SetGoalPriority( "BUILD_truck", 0.75, 0, 0 );
	SetGoalPriority( "ESCORT_truck", 0.95, 0, 0 );

	Util.MapDebugPrint( "Omni-bot map script for " + GetMapName() + " executed." );
};

global OnBotJoin = function( bot )
{
	bot.TargetBreakableDist = 25.0;
	bot.MaxViewDistance = 2500;
};

global InitializeRoutes = function()
{
	MapRoutes =
	{
		BUILD_Truck =
		{
		},
		BUILD_Command_Post =
		{
		},
		BUILD_Assault_Ramp =
		{
		},
		PLANT_Assault_Ramp =
		{
		},
		PLANT_Command_Post =
		{
		},
		PLANT_Wall =
		{
		},
		FLAG_axis_gold =
		{
		},
	};
	Util.Routes(MapRoutes);
};
